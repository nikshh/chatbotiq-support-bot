import telebot
from datetime import datetime

from src.settings import settings
from src.answer_matching import match_answer
from src.models import get_session

bot = telebot.TeleBot(settings.token)
MAX_MESSAGES = 3

def send_business_message(chat_id, text, business_connection_id):
    try:
        bot.send_message(chat_id, text, business_connection_id=business_connection_id)
        print(
            f"–ë–∏–∑–Ω–µ—Å-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id} —Å Business ID: {business_connection_id}"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∏–∑–Ω–µ—Å-—Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@bot.business_message_handler(func=lambda message: True)
def business_message_handler(message):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    business_id = message.business_connection_id
    chat_id = message.chat.id
    print(
        f"[{timestamp}] –ë–ò–ó–ù–ï–°-–°–û–û–ë–©–ï–ù–ò–ï: {message.from_user.username} (Chat ID: {chat_id}, Business ID: {business_id}) -> {message.text}"
    )
    print(f"üí° Business Connection ID –¥–ª—è –æ—Ç–≤–µ—Ç–∞: {business_id}")

    not_found_message = "".join(
        [
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. ü§î\n\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É - "
            "–æ–Ω —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ!\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ /operator –¥–ª—è —Å–≤—è–∑–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º."
        ]
    )

    with get_session() as session:
        best_answer = match_answer(message.text, session)
        if not best_answer:
            send_business_message(chat_id, not_found_message, business_id)
            return 
        
        i = 0
        while best_answer and i < MAX_MESSAGES:
            send_business_message(chat_id, best_answer.text, business_id)
            # print(best_answer.next_answer_id)
            best_answer = best_answer.next_answer
            i += 1
            

if __name__ == "__main__":
    bot.infinity_polling()
